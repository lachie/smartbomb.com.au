-# title: Can code be art?
-# slug: can-code-be-art
-# published_at: 2008-08-27 05:23:00
-# updated_at: 2008-09-01 18:05:39
-# archived_comments: 12


:textile
  For some reason an emasculated twitter-debate flared yesterday, on whether code is art.
  
  Of course, the question is intractable. Art is always elusive, otherwise there wouldn't be any point to creating it in the first place.
  
  However I've been thinking on this subject a bit lately. Toby has an insatiable hunger for drawings of animals, to be wrought by whomever is available/closest. This hunger is so strong that he now associates Daddy's Computer with the drawing of Elephants:
  
  <a href="http://www.flickr.com/photos/lachie/2730829711/" title="efant by lachie, on Flickr"><img src="http://farm4.static.flickr.com/3196/2730829711_a11d1dc70d_m.jpg" width="240" height="180" alt="efant" /></a>
  
  Of course I now have it on "good authority":http://twitter.com/notahat/statuses/899024626 that my credentials on the subject of art and code are inadequate. But I've still been thinking about it enough to raise a slew of illustrative questions.
  
  h2. Is art available to everyone?
  
  Is a child capable of detecting art? At what age do people become sensible of art? Can all people appreciate art?
  
  If No, then who decides? Is there a gold standard, at least a committee?
  
  If code could be art, who would decide if it actually was?
  
  h2. What is art?
  
  For example, is _anything_ within the realm of industrial design art?
  
  Is a beautifully designed car art? I had this discussion with Dad the other day, and you'd be hard pressed to persuade him that car design is anything lower than the height of human sophistication and art.
  
  Obviously this is completely subjective, even inside art's own walls.
  
  Is literature art? Its not much to look at, but it can certainly manifest as art *inside your head*. Is a play art? Is its script art, or only a production thereof? And is an amdram production less arty than a big name one?
  
  Maybe code's concepts or manifestation could be considered to be art. Or maybe code is only art if you "do it like _why":http://redhanded.hobix.com/images/aside-from-that-there-is-a-range.gif.
  
  h2. Science
  
  Programming is part of computer science, but I'm fairly sure we don't usually treat it as such (though maybe unit tests are moving us back towards the scientific method). There's abundant beauty in science but it's not art.
  
  For example, is Flickr more the result of computer science, or the imagination of a small group of people?
  
  h2. Apples, oranges & elephants
  
  Ultimately I think that comparing code and art is an impedance mismatch, but that perhaps the manifestation of code as an application could be considered as art.
  
  And, even if code _is_ art, I think that we're all still at the stage of kiddies who daub their masterworks with arbitrary parts of their body. Kiddies who appreciate most pictures as art, as long as they have elephants.

-throw_content(:archived_comments) do
  %h3 archived comments

  .commentsblock
    %ol.commenlist
      %li
        %cite Lachlan Hardy says:
        %br/
        :plain
          I think I'm in love with your brain. I demand more blog posts!
      %li.alt
        %cite max says:
        %br/
        :plain
          Great article. Reading this really made my day. And I agree with Lachlan - you need to write more of these.<br />
          <br />
          Although I am now acutely aware of the noticeable lack of elephants in the applications I use...
      %li
        %cite Dylan says:
        %br/
        :plain
          I think there are a couple of ways something can become art:<br />
          - through the creator's intention<br />
          - through someone else labelling it as art<br />
          <br />
          I think the most authoritative source of whether something is art or not is whether its creator intended it to be so. <br />
          <br />
          We also have the balance of form and function within the work, which brings this to mind: http://www.smh.com.au/news/richard-glover/designers-too-busy-to-do-any-good-design/2008/04/04/1207249450280.html . Did Philippe Starck intend for this to be art? It's a functional thing--a juicer... Industrial design can be the practice of pushing the limits of form whilst still retaining function (or, hopefully enhancing function too). But apparently this juicer doesn't work very well, so Starck may have sacrificed function for form. Does that make it more artistic?<br />
          <br />
          It can be dangerous territory labelling things as art or not. Marcel Duchamp pushed this area yonks ago (http://en.wikipedia.org/wiki/Marcel_Duchamp). The Dada philosophy seems to deal with this question of whether something is art or not and is worth a glance if you are interested. I don't think it got them anywhere though, and some may think of the work as tacky. But, it seems like a necessary part of art's evolution--someone had to do it. Luckily, we moved on.<br />
          <br />
          I don't think code can really be art. Code seems purely functional to me. It achieves its purpose by making things happen. Is not what the code creates the subject of the art-or-not-art debate, rather than the code itself? What's the chance of code that is formally interesting actually doing anything? ASCII is code with an emphasis on the form (http://www.mcadamreport.org/Mona%20ASCII.gif , http://gist.github.com/7221) and probably no function. Code itself is defined as sets of instructions, but when code loses its functional purpose it seems to lose its right to be called &quot;code&quot;. Unless the mere fact that the letterforms may create shapes that instruct the viewer to perceive an image can be seen as instructions and the code still can be called &quot;code&quot;. Otherwise, it's just a ton of text.<br />
          <br />
          Sorry about the rant. I hope it makes some sense!
      %li.alt
        %cite Pete Yandell says:
        %br/
        :plain
          Whenever you find yourself having a pretentious discussion about what constitutes art, stop, and make some instead.<br />
          <br />
          (With apologies to Merlin Mann.)
      %li
        %cite Daniel Neighman says:
        %br/
        :plain
          Lachie, this is a fantastic post.  I'm with Lachlan and Max.  We need more!
      %li.alt
        %cite max says:
        %br/
        :plain
          @Dylan: speaking of dadaists, Marcel Duchamps' bicycle wheel is on display at the Sydney art gallery as part of the Biennale. Definitely art, I say. Some interesting Beuss works too - also controversial.
      %li
        %cite Dylan says:
        %br/
        :plain
          Beuys did a great artwork once, he was locked in a room in a gallery with a wild coyote for a couple of days! http://stephan.barron.free.fr/technoromantisme/images/beuys_coyote_2.jpg
      %li.alt
        %cite Lachlan Hardy says:
        %br/
        :plain
          @Pete - I find lots of things about Merlin Mann pretentious, so I stopped paying attention to him. Is that what you meant? ;)<br />
          <br />
          I love that one of our coding friends is also studying Fine Arts. That's so cool, even if I have no idea who any of those people Dylan is talking about are. (Wikipedia is my next stop.)<br />
          <br />
          For me, whether code is art is less about the form than the purpose. Programming can be used to make art, just as can sculpting, painting or woodworking skills. It seems that software written for business purposes is less likely to be considered as art. I would suggest that stems from the compromises often necessary to meet business needs.<br />
          <br />
          That's why we all love tinkering. We love our random little apps that we build by ourselves or with a small group of passionate friends. Every little application like that can reach closer to art because it has less constraints and less compromise. We build them for the joy of creating, rather than to earn a living.<br />
          <br />
          And yet, it's the intertwining of the two that raises the entire experience for you and the people using your software. When you can bring art to your business... That's what I aim for.
      %li
        %cite Matthew Landauer says:
        %br/
        :plain
          Personally, I like the definition of art that Scott McCloud gives in Understanding Comics. (I'm no fan of comics but that book is great). He suggests that anything that isn't directly to do with survival (that is food, warmth, etc..) is art. So, yes, code *is* art and this blog is art too. 
      %li.alt
        %cite Lachie says:
        %br/
        :plain
          Thanks for all your responses guys. I'm stoked that this discussion lives on in outside the modulo 140 char world :)<br />
          <br />
          @dylan man, you should turn that into a post of its own :D Lots of food for thought!<br />
          <br />
          @pete do you think we can snowclone that into &quot;Whenever you find yourself having a pretentious discussion about X, stop, and Y some instead&quot; ?<br />
          <br />
          @matthew, @lachlan I sort of synthesise these two perspectives in my head thus: everything I create reaches toward being art (whether or not it achieves it in the eye of the beholder, or sounds pretentious)... I think its the main reason I like what I do, and could potentially like to do other things. <br />
          <br />
          But I do think that anything wrought through mere creativity is on the same continuum as &quot;art&quot; itself.
      %li
        %cite brain_in_vat says:
        %br/
        :plain
          No, it definitely isn't. This idea comes up occsionally. I recently read 'Dive into Python' where the same idea is discussed, and I found someone who actually agreed with me on it.<br />
          <br />
          Firstly, it's true that it's hard to define what art is. But put aside that point and think practically - while there are commonalities between the two, which lead coders to occasionally ask this question, there are great differences.<br />
          <br />
          Coding is really a form of engineering, defined by ideas of elegance (an aesthetic element) and carried out by acts of imagination using a particular language. The end result is a product which must functionally fulfil objective criteria.<br />
          <br />
          Art plays with looser rules, often has to invent its own language each time, and gains its meaning by its interpretation in historical context, e.g. what people think of abstract expressionism last century made it important, in a way which if Jackson Pollock had painted in the Renaisance would have meant his failure. A computer program could hardly function under such conditions at a structural level.<br />
          <br />
          There are similarities, but I think it's always a bit unfair to artists to liberally borrow their product term. And, yeh, it's what they have in common which is perhaps most interesting; the imaginative aspect. Again, though, as someone who pursues an artform separately to programming, I know the two practices are vastly different in acts of imagination and creativity.<br />
          <br />
          Cheers,<br />
          biv
      %li.alt
        %cite Clifford Heath says:
        %br/
        :plain
          There's "pure" art, but many things contain art. Some things exist only to contain art, and those are most likely to be pure art. I don't know whether code can be pure art, but it certainly can contain art.<br />
          <br />
          So I don't believe it's a question about whether something "is" art, but about whether it contains art, and about whether it has any other value or purpose. If Oscar Wilde is to be believed, "all art is quite useless".<br />
          <br />
          My working definition, fwiw, is that art is anything that is created for the sole aim of changing or expressing the way people think or feel about the world. Code can do that, but it's incidental.
